name: "publish"

on:
  push:
    tags:
      - "app-v*"
      
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libpcap-dev

      - name: install frontend dependencies
        run: deno install # change this to npm, pnpm, or bun if necessary.

      - name: Build and package with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App ${{ github.ref_name }}"
          releaseBody: "Voir les assets ci-dessous pour télécharger cette version."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Generate SHA256 for all assets
        run: |
          for file in src-tauri/target/release/bundle/**/*.{exe,msi,dmg,AppImage,deb,rpm,app.tar.gz}; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "$file.sha256"
            fi
          done

      - name: Upload binaries and hashes to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            src-tauri/target/release/bundle/**/*.{exe,msi,dmg,AppImage,deb,rpm,app.tar.gz}
            src-tauri/target/release/bundle/**/*.{sha256}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
