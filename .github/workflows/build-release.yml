name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest, ubuntu-20.04-arm]
    runs-on: ${{ matrix.platform == 'ubuntu-20.04-arm' && 'ubuntu-20.04' || matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Node.js setup
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf libpcap-dev

      - name: Install dependencies (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install winpcap -y
          echo "WinPcap installed"
          (new-object System.Net.WebClient).DownloadFile('https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip','WpdPack_4_1_2.zip')
          7z x WpdPack_4_1_2.zip
          echo "LIB=$env:GITHUB_WORKSPACE\WpdPack\Lib\x64\" >> $env:GITHUB_ENV
          echo "WinPcap Developers Pack installed"

      - name: Setup QEMU (arm only)
        if: matrix.platform == 'ubuntu-20.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu qemu-user-static binfmt-support
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Build the app (arm only)
        if: matrix.platform == 'ubuntu-20.04-arm'
        run: |
          docker build --platform linux/arm/v7 -t tauri-app:arm .
          docker run --rm -v $(pwd):/app tauri-app:arm

      - name: Install app dependencies and build web (non-arm)
        if: matrix.platform != 'ubuntu-20.04-arm'
        run: yarn && yarn build

      - name: Build the app (non-arm)
        if: matrix.platform != 'ubuntu-20.04-arm'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: 1.11.1 # tauri-action replaces __VERSION__ with the app version
          releaseName: 'v1.11.1'
          releaseDraft: true
          prerelease: false
